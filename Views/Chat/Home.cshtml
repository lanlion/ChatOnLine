@{
    ViewData["Title"] = "聊天室";
}

<div class="container body-content">
    <div class="row">
        <div>
            <div  >
                <ul id="div_userlist" class="col-md-3 pull-right"></ul>
                <script>document.write("上线时间：" + (new Date()).toLocaleTimeString())</script>
                <div id="timeNow"></div>
                <ul id="message-list" style="overflow-y:auto; max-height:220px" class="col-md-3 pull-left"></ul>
                <br>
            </div>
            <div id="div_uname">
                <br>  <label for="u_name">输入昵称，加入聊天室</label><br>
                <input type="text" name="u_name" value="" id="u_name" style="width:100px" />

                <input type="button" name="join" value="加入聊天室" id="join" />


            </div>
            <br>


        </div>


    </div>
</div>
<div id="div_send" style="display:none;" class="col-md-3">
    <br> <label for="msg">请输入</label><br>
    <input type="text" name="msg" value="" id="msg" style="width:100px" /><br><br>
    <input type="button" name="btnSend" value="发送" id="btnSend" />
</div>
<audio controls="controls" id="music_send" hidden="hidden">
    <source src="~/music/water_collected.mp3" type="audio/mp3">
    <source src="~/music/water_collected.ogg" type="audio/ogg">
</audio>
<script src="~/chat/signalr-client.js?v=1"></script>
<script src="~/chat/utils.js?v=5"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    $(function () {

        var connection;
        var isConnected = false;
        var groupName = 'lan_chat';
        var currentUserName;
        let transportType = signalR.TransportType[getParameterByName('transport')] || signalR.TransportType.WebSockets;
        let http = new signalR.HttpConnection(`http://${document.location.host}/hubs`, { transport: transportType });
        connection = new signalR.HubConnection(http);

        connection.on('Send', msg => {
            addLine('message-list', msg);
            

        });
        connection.on('SendWithMusic', msg => {
            var jsonmsg = JSON.parse(msg);
            addLine('message-list', jsonmsg.msg);
            if (jsonmsg.name != currentUserName) {
                document.getElementById("music_send").play();
            }
          
        });
        connection.on('LoadUser', json => {
            var list = JSON.parse(json);
            if (list) {
                var lihtml = "当前在线用户";
                for (var i = 0; i < list.length; i++) {
                    lihtml += ('<li>' + list[i].UserName + '</li>');
                }
                $("#div_userlist").html(lihtml);
            }


        }

        );
        connection.onClosed = e => {
            if (e) {
                addLine('message-list', 'Connection closed with error: ' + e, 'red');
            }
            else {
                addLine('message-list', 'Disconnected', 'green');

            }
        }

        connection.start()
            .then(() => {
                isConnected = true;
                //addLine('message-list', '您已成功加入聊天室', 'green');

            })
            .catch(err => {
                addLine('message-list', err, 'red');
            });

        function invoke(connection, method, ...args) {
            if (!isConnected) {
                return;
            }
            var argsArray = Array.prototype.slice.call(arguments);
            connection.invoke.apply(connection, argsArray.slice(1))
                .then(result => {
                    console.log("invocation completed successfully: " + (result === null ? '(null)' : result));

                    if (result) {
                        addLine('message-list', result);
                    }
                })
                .catch(err => {
                    addLine('message-list', err, 'red');
                });
        }

        function getText(id) {
            var ele = document.getElementById(id);
            if (ele) {
                return ele.value;
            }
        }
        function getTextAndSend(id) {
            var ele = document.getElementById(id);

            if (ele) {
                invoke(connection, 'SendToGroup', groupName, ele.value);
                ele.value = "";
            }


        }
        click('btnSend', event => {

            getTextAndSend("msg");

        });
        document.onkeydown = function (event) {
            var e = event || window.event || arguments.callee.caller.arguments[0];
            if (e && e.keyCode == 13) {
                getTextAndSend("msg");
            }
        }

        click('join', event => {

            var username = getText("u_name");
            if (username) {
                currentUserName = username;
                invoke(connection, "JoinGroup", groupName, username)
                $("#div_uname").hide();
                $("#div_send").show();
            }
            else {
                alert("请输入您的昵称");
            }


        });

        //时间
        setInterval(function () {
            $("#timeNow").html("当前时间：" + (new Date()).toLocaleTimeString());
        }, 1000);
    });

</script>
